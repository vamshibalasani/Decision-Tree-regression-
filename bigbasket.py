# -*- coding: utf-8 -*-
"""bigbasket.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hrQaGY-IFi0GrzDjUWKbNlJOcOmBk4fq

# **Problem Statement:**

Big Basket, a food delivery service operating in multiple countries, aims to improve the overall customer experience by analysing the ratings provided by its customers. The target variable in this problem is the rating given by the customers after they receive their food delivery. The company wants to understand the factors that influence the customers' ratings and identify the areas that need improvement.
The challenge for Big Basket is to collect and analyse the ratings data from multiple countries, as customer preferences and expectations may vary across different regions. Additionally, the company needs to develop a system that can capture the feedback from customers in a timely and efficient manner to ensure that the issues are addressed promptly.
Thus, the problem statement for Big Basket is to develop a data-driven approach to understand the factors influencing customer ratings across different countries, and to use this information to enhance the overall customer experience by addressing the areas that require improvement.
bold text
Description of Data:
• Restaurant Id: Unique id of every restaurant across various cities of the world
• Restaurant Name: Name of the restaurant

• Country Code: Country in which restaurant is located

• City: City in which restaurant is located

• Address: Address of the restaurant

• Locality: Location in the city

• Locality Verbose: Detailed description of the locality

• Longitude: Longitude coordinate of the restaurant's location
• Latitude: Latitude coordinate of the restaurant's location

• Cuisines: Cuisines offered by the restaurant

• Average Cost for two: Cost for two people in different currencies 
• Currency: Currency of the country

• Has Table booking: yes/no

• Has Online delivery: yes/ no

• Is delivering: yes/ no

• Switch to order menu: yes/no

• Price range: range of price of food

• Aggregate Rating: Average rating out of 5

• Rating colour: depending upon the average rating colour

• Rating text: text on the basis of rating of rating

• Votes: Number of ratings casted by people

**Import required packages**
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

df= pd.read_csv("/content/df2.0.csv")

df.head()

df.tail()

df.shape

"""# Exploratory Data Analysis(EDA)"""

df.info()

df.isnull().sum()

categorical_list=[ 'Cuisines','Average Cost for two','Price range']

for i in categorical_list:
  df[i]=df[i].astype('category').cat.codes

df['Cuisines ']=df['Cuisines'].fillna(df['Cuisines']).median()
df['Average Cost for two ']=df['Average Cost for two'].fillna(df['Average Cost for two']).median()
df['Price range']=df['Price range'].fillna(df['Price range']).median()

df.columns

df.info()

df.describe()

plt.figure(figsize=(10,10))
# create a list of categories in the desired sequence order
category_order = ['Red', 'Dark Green', 'Green','Yellow','White','Orange']

# create a countplot with the desired sequence order
sns.countplot(x='Rating color', data=df, order=category_order)

# set the title and labels
plt.title('Countplot of Categories')
plt.xlabel('Category')
plt.ylabel('Count')

# display the plot
plt.show()

df['Rating color'].value_counts()

plt.figure(figsize=(10,10))
# create a list of categories in the desired sequence order
category_order = ['Poor', 'Excellent', 'Very Good','Good','Not rated','Average']

# create a countplot with the desired sequence order
sns.countplot(y='Rating text', data=df, order=category_order)

# set the title and labels
plt.title('Countplot of Categories')
plt.ylabel('Category')
plt.xlabel('Count')

# display the plot
plt.show()

df['Rating text'].value_counts()

plt.figure(figsize=(10,8))
sns.countplot(data=df, x="Has Table booking")

plt.figure(figsize=(8,8))
# create a list of categories in the desired sequence order
category_order = ['Yes', 'No']

# create a countplot with the desired sequence order
sns.countplot(y='Has Online delivery', data=df, order=category_order)

# set the title and labels
plt.title('Countplot of Categories')
plt.ylabel('Category')
plt.xlabel('Count')

# display the plot
plt.show()

df['Has Online delivery'].value_counts()

plt.figure(figsize=(10,8))
sns.countplot(data=df, x="Is delivering now")

df['Is delivering now'].value_counts()

df.replace({'Rating color':{'Red':1, 'Dark Green':2, 'Green':3,'Yellow':4,'White':5,'Orange':6}}, inplace=True)

df.replace({'Rating text':{'Poor':1, 'Excellent':2, 'Very Good':3,'Good':4,'Not rated':5,'Average':6}}, inplace=True)

df.replace({'Has Table booking':{'Yes':1,'No':2}}, inplace=True)

df.replace({'Has Online delivery':{'Yes':1,'No':2}}, inplace=True)

df.replace({'Is delivering now':{'Yes':1,'No':2}}, inplace=True)

df.replace({'Switch to order menu':{'Yes':1,'No':2}}, inplace=True)

#checking the outliers.
fig = plt.subplots(figsize=(15,75))
sns.boxplot(data=df, width=0.5)

df.columns

df.head()

sns.boxplot(df['Cuisines'])

sns.boxplot(df['Has Table booking'])

sns.boxplot(df['Has Online delivery'])

sns.boxplot(df['Price range'])

sns.boxplot(df['Rating color'])

sns.boxplot(df['Rating text'])

#checking the correlation.
plt.figure(figsize=(10,7))
sns.heatmap(df.corr(), annot=True)
plt.title('correlation between the columns')
plt.show()

